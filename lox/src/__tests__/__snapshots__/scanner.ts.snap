// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`scanner for more complex use cases should tokenize properly 1`] = `
[
  Token {
    "lexeme": "(",
    "line": 7,
    "literal": null,
    "type": "LEFT_PAREN",
  },
  Token {
    "lexeme": ")",
    "line": 8,
    "literal": null,
    "type": "RIGHT_PAREN",
  },
  Token {
    "lexeme": "{",
    "line": 9,
    "literal": null,
    "type": "LEFT_BRACE",
  },
  Token {
    "lexeme": "}",
    "line": 10,
    "literal": null,
    "type": "RIGHT_BRACE",
  },
  Token {
    "lexeme": ",",
    "line": 11,
    "literal": null,
    "type": "COMMA",
  },
  Token {
    "lexeme": ".",
    "line": 12,
    "literal": null,
    "type": "DOT",
  },
  Token {
    "lexeme": "-",
    "line": 13,
    "literal": null,
    "type": "MINUS",
  },
  Token {
    "lexeme": "+",
    "line": 14,
    "literal": null,
    "type": "PLUS",
  },
  Token {
    "lexeme": ";",
    "line": 15,
    "literal": null,
    "type": "SEMICOLON",
  },
  Token {
    "lexeme": "*",
    "line": 16,
    "literal": null,
    "type": "STAR",
  },
  Token {
    "lexeme": "!",
    "line": 17,
    "literal": null,
    "type": "BANG",
  },
  Token {
    "lexeme": "=",
    "line": 18,
    "literal": null,
    "type": "EQUAL",
  },
  Token {
    "lexeme": "<",
    "line": 19,
    "literal": null,
    "type": "LESS",
  },
  Token {
    "lexeme": ">",
    "line": 20,
    "literal": null,
    "type": "GREATER",
  },
  Token {
    "lexeme": "!=",
    "line": 23,
    "literal": null,
    "type": "BANG_EQUAL",
  },
  Token {
    "lexeme": "==",
    "line": 24,
    "literal": null,
    "type": "EQUAL_EQUAL",
  },
  Token {
    "lexeme": "<=",
    "line": 25,
    "literal": null,
    "type": "LESS_EQUAL",
  },
  Token {
    "lexeme": ">=",
    "line": 26,
    "literal": null,
    "type": "GREATER_EQUAL",
  },
  Token {
    "lexeme": ""Some string."",
    "line": 29,
    "literal": "Some string.",
    "type": "STRING",
  },
  Token {
    "lexeme": "1",
    "line": 32,
    "literal": 1,
    "type": "NUMBER",
  },
  Token {
    "lexeme": "42",
    "line": 33,
    "literal": 42,
    "type": "NUMBER",
  },
  Token {
    "lexeme": "42.98",
    "line": 34,
    "literal": 42.98,
    "type": "NUMBER",
  },
  Token {
    "lexeme": "5",
    "line": 35,
    "literal": 5,
    "type": "NUMBER",
  },
  Token {
    "lexeme": ">",
    "line": 35,
    "literal": null,
    "type": "GREATER",
  },
  Token {
    "lexeme": "1",
    "line": 35,
    "literal": 1,
    "type": "NUMBER",
  },
  Token {
    "lexeme": "5",
    "line": 36,
    "literal": 5,
    "type": "NUMBER",
  },
  Token {
    "lexeme": "==",
    "line": 36,
    "literal": null,
    "type": "EQUAL_EQUAL",
  },
  Token {
    "lexeme": "5",
    "line": 36,
    "literal": 5,
    "type": "NUMBER",
  },
  Token {
    "lexeme": "someVariable",
    "line": 39,
    "literal": null,
    "type": "IDENTIFIER",
  },
  Token {
    "lexeme": "_42_glasses",
    "line": 40,
    "literal": null,
    "type": "IDENTIFIER",
  },
  Token {
    "lexeme": "false",
    "line": 43,
    "literal": null,
    "type": "FALSE",
  },
  Token {
    "lexeme": "class",
    "line": 44,
    "literal": null,
    "type": "CLASS",
  },
  Token {
    "lexeme": "",
    "line": 44,
    "literal": null,
    "type": "EOF",
  },
]
`;
